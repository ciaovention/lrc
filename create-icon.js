const fs = require('fs');
const path = require('path');

// Create a valid PNG file - this is a 1x1 blue pixel
const pngData = Buffer.from([
  0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
  0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
  0x08, 0x02, 0x00, 0x00, 0x00, 0x90, 0x77, 0x53, 0xDE, 0x00, 0x00, 0x00,
  0x09, 0x70, 0x48, 0x59, 0x73, 0x00, 0x00, 0x0E, 0xC4, 0x00, 0x00, 0x0E,
  0xC4, 0x01, 0x95, 0x2B, 0x0E, 0x1B, 0x00, 0x00, 0x00, 0x0C, 0x49, 0x44,
  0x41, 0x54, 0x08, 0xD7, 0x63, 0xF8, 0xFF, 0xFF, 0x3F, 0x00, 0x05, 0xFE,
  0x02, 0xFE, 0xDC, 0xCC, 0x59, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
  0x4E, 0x44, 0xAE, 0x42, 0x60, 0x82
]);

// Ensure the build directory exists
const iconDir = path.join(__dirname, 'build');
if (!fs.existsSync(iconDir)) {
  fs.mkdirSync(iconDir, { recursive: true });
}

// Write the PNG file
const iconPath = path.join(iconDir, 'icon.png');
fs.writeFileSync(iconPath, pngData);

console.log(`Created valid PNG icon at ${iconPath}`);

// Also create a simple text file as icon (as a fallback)
const textIconPath = path.join(iconDir, 'icon.txt');
fs.writeFileSync(textIconPath, 'LRC Editor Icon');

console.log(`Created text icon at ${textIconPath}`);

// Let the user know what to do next
console.log('\nNow try building with one of these commands:');
console.log('  npm run build && npx electron-builder --dir --publish=never');
console.log('  or');
console.log('  NODE_DEBUG=electron-builder npm run build && npx electron-builder --dir --publish=never');